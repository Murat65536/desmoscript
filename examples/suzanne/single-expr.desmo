import script "./3dTest.mjs"

"In theory, we can get Suzanne in a single expression."
"The way to do this is to use sums to bind reusable variables."
"Unlike substitutions, these can be arbitrarily nested."

ns prev {
  n = 0;
}

loop!(looptest, 3, {
      n = 1;
    }, {
      n = prev.n * 2;
    });

loop!(looptest2, 5, {
      n = 3;
    }, {
      n = prev.n + 1;
    });

result = looptest2.n * 69;

x = four!();

settings @{ viewport: @{ xmin: -2, ymin: -2, xmax: 2, ymax: 2 } }
