fn binaryUnpack(list, bitsPerNumber, numbersPerNumber, count) {
  [
    mod(floor(num / bitDivFactor), 2 ^ bitsPerNumber)
    for
    bitDivFactor=(2 ^ ((0 .. numbersPerNumber - 1) * bitsPerNumber));
    num=join(list, [])
  ][1 .. count]
}

fn getComponentOfVertexOfMesh(mesh, component) {
  averagePosition = mesh[1 + component];
  scaleFactor = mesh[4];
  vertexListLength = mod(mesh[5], 2 ^ 26);
  packedListLength = ceil(vertexListLength / 3);
  ((binaryUnpack(
    mesh[(1 .. packedListLength) + 5 + packedListLength * component], 
    16, 
    3,
    vertexListLength
  ) - 2^15)) * scaleFactor / 2^15 + averagePosition
}

